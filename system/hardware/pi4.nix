# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [
    "xhci_pci"
    "usbhid"
    "uas"
    "usb_storage"
    "vc4"
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/44444444-4444-4444-8888-888888888888";
    fsType = "ext4";
  };

  systemd.tmpfiles.rules = [
    "d /mnt/lib0 0775 pi4 usenet"
    "d /mnt/lib1 0775 pi4 usenet"
    "d ${config.server.media_folder} 0775 pi4 usenet"
    "d ${config.server.git_folder} 0775 ${config.services.gitea.user} ${config.services.gitea.group}"
    "d ${config.server.cloud_folder} 0775 pi4 usenet"
  ];
  fileSystems."/mnt/lib0" = {
    device = "/dev/disk/by-uuid/af71a65d-c25d-40c8-98fa-792c61de0630";
    fsType = "btrfs";
    options = [
      "subvol=@"
      "defaults"
      "noatime"
    ];
  };
  fileSystems."/mnt/lib1" = {
    device = "/dev/disk/by-uuid/0dc95e30-d5bc-4385-b883-15ba5aaa172d";
    fsType = "btrfs";
    options = [
      "subvol=@"
      "defaults"
      "noatime"
    ];
  };
  services.btrfs.autoScrub = {
    enable = true;
    interval = "weekly";
  };

  systemd.services.mergerfskodilib = {
    after = [
      "mnt-lib0.mount"
      "mnt-lib1.mount"
    ];
    requires = [
      "mnt-lib0.mount"
      "mnt-lib1.mount"
    ];
    wantedBy = [ "local-fs.target" ];
    before = [
      "export-books.mount"
      "export-movies.mount"
      "export-series.mount"
      "export-music.mount"
    ];
    unitConfig.DefaultDependencies = "no";
    serviceConfig = {
      User = "root";
      Type = "oneshot";
      KillMode = "none";
      ExecStart = "${pkgs.mergerfs}/bin/mergerfs -o cache.files=partial,dropcacheonclose=true,category.create=mfs,category.search=newest /mnt/lib0:/mnt/lib1 ${config.server.media_folder}";
      Restart = "on-failure";
    };
  };

  #  systemd.services.exportkodilib = {
  #    after = [ "mergerfskodilib.service" ];
  #    requires = [ "mergerfskodilib.service" ];
  #    wantedBy = [ "default.target" ];
  #    serviceConfig = {
  #      User = "root";
  #      Type = "oneshot";
  #      ExecStart = "${pkgs.mount}/bin/mount --bind /mnt/kodi_lib/movies /export/movies; ${pkgs.mount}/bin/mount --bind /mnt/kodi_lib/series /export/series; ${pkgs.mount}/bin/mount --bind /mnt/kodi_lib/books /export/books";
  #    };
  #  };

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eth0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlan0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "aarch64-linux";
  powerManagement.cpuFreqGovernor = lib.mkDefault "ondemand";
}
